<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.oracle.weblogic.lifecycle</groupId>
    <artifactId>weblogic-deploy-tooling-ct</artifactId>
    <version>0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Oracle WebLogic Server Deploy Tooling Continuous Testing</name>
    <description>A Continuous Testing approach for creating and running automated tests on the WebLogic Deploy Tooling components</description>
    <url>https://github.com/wercker/weblogic-deploy-tooling-ct</url>
    <inceptionYear>2018</inceptionYear>
    <licenses>
        <license>
            <name>The Universal Permissive License (UPL), Version 1.0</name>
            <url>https://oss.oracle.com/licenses/upl/</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>The 3-Clause BSD License</name>
            <url>https://opensource.org/licenses/BSD-3-Clause</url>
            <distribution>repo</distribution>
            <comments>The Antlr Project license</comments>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/wercker/weblogic-deploy-tooling-ct</url>
        <connection>scm:git:git@github.com:wercker/weblogic-deploy-tooling-ct.git</connection>
        <developerConnection>scm:git:git@github.com:wercker/weblogic-deploy-tooling-ct.git</developerConnection>
        <tag>HEAD</tag>
  </scm>

    <properties>
        <maven.source.skip>true</maven.source.skip>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <skipTests>false</skipTests>
        <antlr.version>4.7.1</antlr.version>

        <sonar.sources>src/main</sonar.sources>
        <sonar.java.source>7</sonar.java.source>
        <sonar.exclusions>.flattened-pom.xml,target/**</sonar.exclusions>
        <sonar.test.exclusions>src/test/**</sonar.test.exclusions>
    </properties>

    <modules>
        <module>core</module>
        <module>installer</module>
    </modules>
 
   <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-runtime</artifactId>
                <version>${antlr.version}</version>
            </dependency>
            <dependency>
                <groupId>org.python</groupId>
                <artifactId>jython</artifactId>
                <version>2.2.1</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                    <configuration>
                        <archive>
                            <manifestEntries>
                                <Implementation-Title>${project.groupId}:${project.artifactId}</Implementation-Title>
                                <Implementation-Version>${project.version}</Implementation-Version>
                                <Implementation-Build>${git.branch}.${git.shortRevision}</Implementation-Build>
                                <Implementation-Build-Date>${maven.build.timestamp}</Implementation-Build-Date>
                                <Implementation-Vendor-Id>Oracle</Implementation-Vendor-Id>
                                <Specification-Title>${project.artifactId}.${project.packaging}</Specification-Title>
                                <Built-By>Oracle</Built-By>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.20.1</version>
                    <configuration>
                        <!-- Created by jacoco plugin (inherited configuration) -->
                        <argLine>${surefireArgLine}</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.rhpatrick.mojo</groupId>
                    <artifactId>wlst-test-maven-plugin</artifactId>
                    <version>1.0.2</version>
                </plugin>
                <plugin>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-maven-plugin</artifactId>
                    <version>${antlr.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>1.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.7.9</version>
                    <executions>
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${sonar.jacoco.reportPath}</destFile>
                                <propertyName>surefireArgLine</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>site</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                                <dataFile>${sonar.jacoco.reportPath}</dataFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.4.0.905</version>
                </plugin>
                <plugin>
                    <groupId>ru.concerteza.buildnumber</groupId>
                    <artifactId>maven-jgit-buildnumber-plugin</artifactId>
                    <version>1.2.10</version>
                    <configuration>
                        <runOnlyAtExecutionRoot>false</runOnlyAtExecutionRoot>
                    </configuration>
                    <executions>
                        <execution>
                            <id>git-buildnumber</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>extract-buildnumber</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-build-environment</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>1.8.0</version>
                                    <message>
                                        You must use JDK 8 to build the project since the encryption utilities
                                        unit test requires JDK 8 due to the encryption algorithms used
                                    </message>
                                </requireJavaVersion>
                                <requireProperty>
                                    <property>unit-test-wlst-dir</property>
                                    <message>
                                        You must set the unit-test-wlst-dir System property to point
                                        the directory where the WLST shell script lives.
                                    </message>
                                </requireProperty>
                                <requireProperty>
                                    <property>weblogic-deploy-tooling-project-dir</property>
                                    <message>
You must set the weblogic-deploy-tooling-project-dir System property to the directory 
where the weblogic-deploy-tooling repository is, on your local system. That path must 
be relative to the ${project.basedir}/installer/src/assembly directory, 
not an absolute path. 

For example:

  -Dweblogic-deploy-tooling-project-dir=../../../../github.com/repositories/weblogic-deploy-tooling
                                     </message>
                                </requireProperty>
                                <requireFilesExist>
                                   <files>
                                     <file>${weblogic-deploy-tooling-project-dir}/core/src/main/python/create.py</file>
                                     <file>${weblogic-deploy-tooling-project-dir}/core/src/main/python/deploy.py</file>
                                     <file>${weblogic-deploy-tooling-project-dir}/core/src/main/python/discover.py</file>
                                     <file>${weblogic-deploy-tooling-project-dir}/core/src/main/python/encrypt.py</file>
                                     <file>${weblogic-deploy-tooling-project-dir}/core/src/main/python/validate.py</file>
                                   </files>
                                   <message>
The weblogic-deploy-tooling-project-dir System property is set, but ${weblogic-deploy-tooling-project-dir} 
does not appear to be a relative path pointing to a oracle/weblogic-deploy-tooling GitHub repo.
It must be a relative to the ${project.basedir}/installer/src/assembly directory, not an absolute path.

For example:

  -Dweblogic-deploy-tooling-project-dir=../../../../github.com/repositories/weblogic-deploy-tooling

                                   </message>
                                </requireFilesExist>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <embedBuildProfileDependencies>true</embedBuildProfileDependencies>
                    <pomElements>
                        <repositories>flatten</repositories>
                    </pomElements>
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
 